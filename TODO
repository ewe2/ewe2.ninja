- Sass mostly done, clean up compass method
  Use compass inclusions to build what we need for the rest of the site unless
  that becomes unwieldy.

  compass/css3:
  can fix up flex and box-shadow stuff!

- implement Rake build using jekyll, japr, compass to process the sass and use
  the templating and markdown to generate the content!


this means:

- creating the jekyll structure
- splitting the markup into chunks that can be templated OR just put together
  a template that does this.
- figuring out a way to get compass to do our js/css compression through japr.
- have a look at floomby.github.io in parent dir, as an example where Rake is
  used to automate all these things.

this also means probably changing master to get the files from a _site deploy
so we can update release from that. devel will have to look different!

compass breakdown

do as much setting in config.rb to stop cluttering things up. either keep
compass watch running in another terminal (in devel branch!) or just run it
after editing. try running compass compile --production in master branch.

* devel is ongoing work: it has all the build structure. it is never tagged. its
commits get pushed to netstor master

* master is now staging for testing and fixes etc: it merges non-build stuff
from devel and tags with a v-number. at some point it might have its own
testing stuff also. its commits get pushed to netstor devel

* release is for deploying. it only merges the final files needed from master
and tags with an r-number. its commits gets pushed to origin release

Do NOT git rm in the working directory from now on!

howto merge files from a branch: 
git co master <files>

this also applies to master!! particularly for css/*.css since we now generate
those files. Unless prepared to commit each file seperately, or commit php's
separately to css, merges wont work. On the other hand, you then have to know
what the commit was and what to choose which is painful.

possibly master/release should have a list of files to update from devel so we can
automate that (probably a Grunt thing to do).




license boilerplate:

<a rel="license" href="http://creativecommons.org/licenses/by-nc-nd/4.0/"><img
alt="Creative Commons License" style="border-width:0"
src="https://i.creativecommons.org/l/by-nc-nd/4.0/88x31.png" /></a><br />This
work is licensed under a <a rel="license"
href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons
Attribution-NonCommercial-NoDerivatives 4.0 International License</a>.


